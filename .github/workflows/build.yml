on:
  workflow_call:
    outputs:
      ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG:
        value: ${{ jobs.generate_image_tags.outputs.ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG}}
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  generate_image_tags:
    runs-on: ubuntu-latest
    outputs:
      ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG: ${{ steps.generate_storage_service_image_tag.outputs.ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG}}
    steps:
      - uses: actions/checkout@v5
      - name: Set ECR domain env var
        id: set_ecr_domain
        run: echo "ECR_DOMAIN=364159549467.dkr.ecr.$AWS_REGION.amazonaws.com" >> "$GITHUB_ENV"
        env:
          AWS_REGION: ${{ vars.AWS_DEFAULT_REGION }}
      - name: Set branch type env var
        id: set_branch_type
        run: echo "BRANCH_TYPE=$([[ ${GITHUB_REF##*/} = main ]] && echo main || echo feature)" >> "$GITHUB_ENV"
      - name: Set abbreviated commit hash env var
        id: set_abbreviated_commit_hash
        run: echo "ABBREVIATED_COMMIT_HASH=$(git rev-parse --short $GITHUB_SHA)" >> "$GITHUB_ENV"
      - name: Generate Storage Service Image Tag
        id: generate_storage_service_image_tag
        run: echo "ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG=$ECR_DOMAIN/archivematica:storage-service-$BRANCH_TYPE-$ABBREVIATED_COMMIT_HASH" >> "$GITHUB_OUTPUT"
  build_storage_service:
    needs:
      - generate_image_tags
    runs-on: ubuntu-latest
    env:
      ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG: ${{ needs.generate_image_tags.outputs.ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG}}
    steps:
      - uses: actions/checkout@v5
      - run: docker build -t $ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG --target archivematica-storage-service -f Dockerfile .
      - name: AWS Login
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 364159549467.dkr.ecr.$AWS_REGION.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Publish Image to ECR
        run: docker push $ARCHIVEMATICA_STORAGE_SERVICE_IMAGE_TAG
